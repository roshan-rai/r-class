n
cat("Hello, World!\n")
cat("Lol")
cat("its fun")
cat(lol)
cat("wau 3 hours")
my.text <= "MIT5032 learners are awesome. Dr. Kumar is really enjoying interacting with them."
my.text <- "MIT5032 learners are awesome. Dr. Kumar is really enjoying interacting with them."
print(my.text)
hello <- "HELLO WORLD!'
print('hello')
hello <- "HELLO WORLD!'
help(sd)
hello <- "HELLO WORLD!"
print('hello')
print(hello)
print(mean((100,200)))
print(mean(c(100,200)))
NA <- 10
NA <- 10
N<- 10
Print(N)
NA<- 10
print(NA)
na<- 10
print(na)
print(sd(C(10,12,15)))
print(sd(c(10,12,15)))
issue.sum < - sum(C(45, 24))
issue.sum < - sum(c(45, 24))
issue.sum <- sum(c(45, 24))
issue.sum <- sum(C(45, 24))
issue.sum <- sum(c(45, 24))
print(issue.sum)
30
print(find.error)
print(find.error)
rror <- 30
find.error <- 30
print(find.error)
Twofind.error <- 30
print(Twofind.error)
twoFind.error <- 30
print(twoFind.error)
print(print('The result of 3 + 4 is' , 3 + 4 ))
print(f('The result of 3 + 4 is' , 3 + 4 ))
print(paste('The result of 3 + 4 is' , 3 + 4 ))
seq(2:50,2)
Seq(2:50,2)
Seq(2,50:2)
seq(2,50:2)
seq(2,50,2)
seq(2,20,2)
seq(2,20,by=2)
seq(from=2,to=20,by=2)
seq()
seq(2,30)
Addition <- c(5,6,8)
sd(addition)
sd(Addition)
addition <- c(5,6,8)
sd(addition)
sprintf('%.3f',sd(addition))
sprintf('%.3d',sd(addition))
sprintf('%.3e',sd(addition))
sprintf('%.3g',sd(addition))
sprintf('%.3a',sd(addition))
sprintf('%.3f',sd(addition))
floor('%.3f',sd(addition))
floor(sd(addition))
addition <- c(5,6,8)
floor(sd(addition))
floor(sd(addition)*1000)/1000
q()
quit()
Q()
mean(c(4,6,8))
input.data <- seq(1:5)
input.data > 3
x <- min(c(2,3,0,6,3))
print(x)
seq(5, 7, by = 0.4)
dummy.data <- c(2,3,4 )
print(dummy.data)
(dummy.data + 1)[2]
sd(c(3,3,3))
addition <- c(5,6,8)
floor(sd(addition)*1000)/1000
NA <- 10
Print(NA)
NA <- 10
print(NA)
setwd("C:/Users/Roshan Rai/One Drive - University of Oklahoma/Rclass")
setwd("C:/Users/Roshan Rai/OneDrive - University of Oklahoma/Rclass")
setwd("C:/Users/Roshan Rai/OneDrive - University of Oklahoma/Rclass")
getwd()
vital.data<-read.csv(file="VitalDataSubset.csv",header=TRUE,sep=",")
health.data<-read.csv(file="HealthcareData.csv",header=TRUE,sep=",")
left<-merge(vital.data,health.data,by="ID",all.x=TRUE)
left
right<-merge(vital.data,health.data,by="ID",all.y=TRUE)
right
inner<-merge(vital.data,health.data,by.x=c("SysBloodPressure","DiaBloodPressure"),by.y=c("SystolicBP","DiastolicBP"))
inner<-merge(vital.data,health.data,by.y=c("SysBloodPressure","DiaBloodPressure"),by.x=c("SystolicBP","DiastolicBP"))
inner
outer<-merge(vital.data,health.data,by="ID",all=TRUE)
outer
i<-0
for(i in 1:nrow(outer))
{
if (isnull(outer$SystolicBP)) {
outer$SystolicBP<-mean(outer$SystolicBP)
}else
{}
}
i<-0
for(i in 1:nrow(outer))
{
if (is.null(outer$SystolicBP)) {
outer$SystolicBP<-mean(outer$SystolicBP)
}else
{}
}
outer$SystolicBP
outer
i<-0
for(i in 1:nrow(outer))
{
if (is.null(outer$SystolicBP[i])) {
outer$SystolicBP[i]<-mean(outer$SystolicBP)
}else
{}
}
outer
i<-0
for(i in 1:nrow(outer))
{
if (is.na(outer$SystolicBP[i])) {
outer$SystolicBP[i]<-mean(outer$SystolicBP)
}else
{}
}
outer
i<-0
for(i in 1:nrow(outer))
{
if (is.na(outer$SystolicBP[i])) {
outer$SystolicBP[i]<-mean(outer$SystolicBP,na.rm=TRUE)
}else
{}
}
outer
i<-0
for (i in 1:nrow(outer)) {
if (is.na(outer$DiastolicBP[i])) {
outer$DiastolicBP[i]<-mean(outer$DiastolicBP,na.rm=TRUE)
}else
{}
}
outer
i<-0
for(i in 1:nrow(outer))
{
if(outer$AgeInYears[i]>25)
{
outer$Big[i]<-"Adult"
}else{
outer$Big[i]<-"Young"
}
}
i<-0
for(i in 1:nrow(outer))
{
if(outer$AgeInYears[i]>25)
{
outer$Big[i]<-"Adult"
}else{
outer$Big[i]<-"Young"
}
}
outer$AgeInYears[1]>25
i<-1
for(i in 1:nrow(outer))
{
if(outer$AgeInYears[i]>25)
{
outer$Big[i]<-"Adult"
}else{
outer$Big[i]<-"Young"
}
}
outer
nrow(outer)
i<-0
for(i in 1:nrow(outer))
{
if (is.na(outer$SystolicBP[i])) {
outer$SystolicBP[i]<-mean(outer$SystolicBP,na.rm=TRUE)
}else
{}
}
i<-1
for(i in 1:nrow(outer))
{
if(outer$AgeInYears[i]>25){
print(outer$AgeInYears[i])
}else{
#outer$Big[i]<-"Young"
}
}
i<-1
for(i in 1:nrow(outer))
{
if(is.na(outer$AgeInYears[i]>25){
i<-1
for(i in 1:nrow(outer))
{
if(is.na(outer$AgeInYears[i]>25)){
outer$Big[i]<-"Adult"
}else{
outer$Big[i]<-"Young"
}
}
outer
functionName<-function(outer)
{
i<-0
for(i in 1:nrow(outer))
{
if(is.na(outer$Opinion[i]>3))
{
outer$CustomerSatisfaction[i]<-"Satisfied"
}else
{
outer$CustomerSatisfaction[i]<-"Not Satisfied"
}
return(outer)
}
}
outer
outer
functionName
outer
functionName<-function(outer)
{
i<-0
for(i in 1:nrow(outer))
{
if(is.na(outer$Opinion[i]>3))
{
outer$CustomerSatisfaction[i]<-"Satisfied"
}else{
outer$CustomerSatisfaction[i]<-"Not Satisfied"
}
return(outer)
}
}
functionName
functionName(outer)
as.Date(outer$Date[nrow(outer)-1]-outer$Date[nrow(outer)])
outer$Date[nrow(outer)-1]
outer$Date[nrow(outer)]
outer$Date[nrow(outer)-4]
as.Date(outer$Date[nrow(outer)-1]-outer$Date[nrow(outer)-4])
as.Date(outer$Date[nrow(outer)-1]-outer$Date[nrow(outer)-4],format="%m/%d/%y")
help("as.Date")
as.Date(outer$Date[nrow(outer)-1])
(outer$Date[nrow(outer)-1]-outer$Date[nrow(outer)-4],format="%m/%d/%y")
a<-(outer$Date[nrow(outer)-1]-outer$Date[nrow(outer)-4])
a<-as.Date(outer$Date[nrow(outer)-1]-as.Date(outer$Date[nrow(outer)-4]))
a<-as.Date(outer$Date[nrow(outer)-1])-as.Date(outer$Date[nrow(outer)-4]))
as.Date(outer$Date[nrow(outer)-1])
as.Date(outer$Date[nrow(outer)-1])
a<-as.Date(outer$Date)[2]-as.Date(outer$Date)[1]
a
a<-as.Date(outer$Date)[nrow(outer)-3]-as.Date(outer$Date)[1]
a
a<-as.numeric(as.Date(outer$Date)[nrow(outer)-3]-as.Date(outer$Date)[1])
a
byInsurance<-aggregate(ChargesInDollars~Insurance, data=outer,FUN=sum)
byInsurance
byGender<-aggregate(ChargesInDollars~Gender, data=outer,FUN=mean)
byGender
combinedData<-merge(byInsurance, byGender, by="ChargesInDollars")
combinedData
dayBrows<-aggregate(Customer~(Day+Browser), data=shoppers.data, FUN=length)
dayBrows<-aggregate(Customer~(Day+Browser), data=shoppers.data, FUN=length)
dayBrows<-aggregate(Customer~(Day+Browser), data=shoppers.data, FUN=length)
outer
outer<-outer[1:nrow(outer)-1]
1:nrow(outer)-1
outer[1:nrow(outer)-1]
outer
outer<-outer[1:nrow(outer)-1,]
outer
outer<-subset(outer,select=-c("Big"),)
outer<-subset(outer,select=-c("Big","DiaBloodPressure"),)
outer<-subset(outer,select=-c("Big","DiaBloodPressure"))
outer<-subset(outer,select=-c("Big","DiaBloodPressure"),subset=TRUE)
outer
outer<-subset(outer,select=-c(Big,DiaBloodPressure))
outer
se<-subset(outer,grepl("^A"),State,ignore.case=TRUE)
se<-subset(outer,grepl("^A"),State,ignore.case=TRUE)
se<-subset(outer,grepl("^A"),State)
se<-subset(outer,grepl("^A"),State,)
se<-subset(outer,grepl("^A",State))
se
outer$Gender<-gsub("M","Male",outer$Gender,ignore.case = TRUE)
outer
outer$Gender<-gsub("F","Female",outer$Gender,ignore.case = TRUE)
outer
outer<-merge(vital.data,health.data,by="ID",all=TRUE)
outer
i<-0
for(i in 1:nrow(outer))
{
if (is.na(outer$SystolicBP[i])) {
outer$SystolicBP[i]<-mean(outer$SystolicBP,na.rm=TRUE)
}
}
outer
help(mean)
a<-as.Date(outer$Date-as.Date(outer$Date[nrow(outer)-4]))
setwd("C:/Users/Roshan Rai/OneDrive - University of Oklahoma/Rclass")
getwd()
vital.data<-read.csv(file="VitalDataSubset.csv",header=TRUE,sep=",")
health.data<-read.csv(file="HealthcareData.csv",header=TRUE,sep=",")
left<-merge(vital.data,health.data,by="ID",all.x=TRUE)
right<-merge(vital.data,health.data,by="ID",all.y=TRUE)
inner<-merge(vital.data,health.data,by.y=c("SysBloodPressure","DiaBloodPressure"),by.x=c("SystolicBP","DiastolicBP"))
outer<-merge(vital.data,health.data,by="ID",all=TRUE)
help(mean)
i<-0
for(i in 1:nrow(outer))
{
if (is.na(outer$SystolicBP[i])) {
outer$SystolicBP[i]<-mean(outer$SystolicBP,na.rm=TRUE)
}
}
i<-0
for (i in 1:nrow(outer)) {
if (is.na(outer$DiastolicBP[i])) {
outer$DiastolicBP[i]<-mean(outer$DiastolicBP,na.rm=TRUE)
}else
{}
}
i<-1
for(i in 1:nrow(outer))
{
if(is.na(outer$AgeInYears[i]>25)){
outer$Big[i]<-"Adult"
}else{
outer$Big[i]<-"Young"
}
}
#making own function
functionName<-function(outer)
{
i<-0
for(i in 1:nrow(outer))
{
if(is.na(outer$Opinion[i]>3))
{
outer$CustomerSatisfaction[i]<-"Satisfied"
}else{
outer$CustomerSatisfaction[i]<-"Not Satisfied"
}
return(outer)
}
}
#calling function
functionName(outer)
a<-as.numeric(as.Date(outer$Date)[nrow(outer)-3]-as.Date(outer$Date)[1])
a
as.Date(outer$Date[nrow(outer)-1])
as.Date(outer$Date)[nrow(outer)-3]-as.Date(outer$Date)[1]
byInsurance<-aggregate(ChargesInDollars~Insurance, data=outer,FUN=sum)
byInsurance
dayBrows<-aggregate(Customer~(Day+Browser), data=shoppers.data, FUN=length)
#week 7 final week
students <- data.frame(name = c("Joe", "Fred", "Bill"), age = c(32, 24, 28))
students.name
dayBrows<-aggregate(Customer~(Day+Browser), data=shoppers.data, FUN=length)
#assignment 2
shoppers.data <- read.csv(file="ShoppersData.csv", sep=",", header=TRUE)
dayBrows<-aggregate(Customer~(Day+Browser), data=shoppers.data, FUN=length)
dayBrows
